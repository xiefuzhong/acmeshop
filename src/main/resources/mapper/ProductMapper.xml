<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.acme.acmemall.dao.ProductMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.acme.acmemall.model.ProductVo" id="productMap">
        <result property="id" column="id"/>
        <result property="goods_id" column="goods_id"/>
        <result property="goods_specification_ids" column="goods_specification_ids"/>
        <result property="goods_specifition_name_value" column="spec_value"/>
        <result property="goods_sn" column="goods_sn"/>
        <result property="goods_number" column="goods_number"/>
        <result property="retail_price" column="retail_price"/>
        <result property="market_price" column="market_price"/>
        <result property="goods_name" column="goods_name"/>
        <result property="list_pic_url" column="list_pic_url"/>
        <result property="spec_pic_url" column="spec_pic_url"/>
        <result property="product_id" column="product_id"/>
        <result property="merchant_id" column="merchant_id"/>
        <result property="group_price" column="group_price"/>
    </resultMap>

    <select id="queryObject" resultMap="productMap">
        select a.*, b.name as goods_name, b.list_pic_url as list_pic_url
        from t_acme_mall_product a left join t_acme_mall_goods b on a.goods_id = b.id
        where a.id = #{value}
    </select>

    <select id="queryList" resultMap="productMap">
        select a.*,
        s.value as spec_value,
        s.pic_url as spec_pic_url,
        b.name as goods_name,
        b.list_pic_url as list_pic_url
        from t_acme_mall_product a
        left join t_acme_mall_goods b on a.goods_id = b.id
        left JOIN t_acme_mall_goods_specification s on s.id = a.goods_specification_ids
        <where>
            <if test="goods_id != null">
                and a.goods_id = #{goods_id}
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by a.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from t_acme_mall_product
    </select>

    <insert id="save" parameterType="com.acme.acmemall.model.ProductVo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_acme_mall_product
        (
        `goods_id`,
        `goods_specification_ids`,
        `goods_sn`,
        `goods_number`,
        `retail_price`,
        `market_price`
        )
        VALUES
        (
        #{goods_id},
        #{goods_specification_ids},
        #{goods_sn},
        #{goods_number},
        #{retail_price},
        #{market_price}
        )
    </insert>

    <insert id="saveBatch" useGeneratedKeys="true" keyProperty="id" parameterType="list">
        INSERT INTO t_acme_mall_product
        (
        `goods_id`,
        `goods_specification_ids`,
        `goods_sn`,
        `goods_number`,
        `retail_price`,
        `market_price`
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.goods_id},
            #{item.goods_specification_ids},
            #{item.goods_sn},
            #{item.goods_number},
            #{item.retail_price},
            #{item.market_price}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.acme.acmemall.model.ProductVo">
        update t_acme_mall_product set goods_number = #{goods_number} where id = #{id}
    </update>

    <update id="batchUpdate" parameterType="list">
        update t_acme_mall_product
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="goods_number =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.goods_number!=null">
                        when id=#{item.id} then #{item.goods_number}
                    </if>
                </foreach>
            </trim>
            <trim prefix="retail_price =case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.retail_price!=null">
                        when id=#{item.id} then #{item.retail_price}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>
</mapper>