<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.acme.acmemall.dao.SysRoleMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.acme.acmemall.model.RoleVo" id="roleMap">
        <result property="id" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="description" column="remark"/>
        <result property="addTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
        <result property="operatorId" column="create_user_id"/>
        <result property="adminFlag" column="is_admin"/>
    </resultMap>

    <select id="queryObject" resultMap="roleMap">
        select * from sys_role where role_id = #{value}
    </select>

    <select id="queryList" resultMap="roleMap">
        select * from sys_role a
        <where>
            <if test="status != null and status != ''">
                AND a.status = #{status}
            </if>
            <if test="roleName != null and roleName.trim() != ''">
                AND a.role_name LIKE concat('%',#{roleName},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by a.role_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_role a
        <where>
            <if test="status != null and status != ''">
                AND a.status = #{status}
            </if>
            <if test="roleName != null and roleName.trim() != ''">
                AND a.role_name LIKE concat('%',#{roleName},'%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.acme.acmemall.model.RoleVo" useGeneratedKeys="true" keyProperty="id">
        insert into sys_role
        (
        `role_name`,
        `remark`,
        `create_time`,
        `create_user_id`
        )
        values
        (
        #{roleName},
        #{description},
        #{addTime},
        #{operatorId}
        )
    </insert>

    <update id="update" parameterType="com.acme.acmemall.model.RoleVo">
        update sys_role
        <set>
            <!--        roleName    -->
            <if test="roleName != null">`role_name` = #{roleName},</if>
            <!--            description-->
            <if test="description != null">`remark` = #{description},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
        </set>
        where role_id = #{id}
    </update>

    <delete id="delete">
        delete from sys_role where role_id = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from sys_role where role_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchSaveUserRole">
        insert into sys_user_role
        (
        `user_id`,
        `role_id`
        )
        values
        <foreach item="item" collection="roles" separator=",">
            (
            #{userId},
            #{item.id}
            )
        </foreach>
    </insert>

    <!--    deleteUserRoleByUserId-->
    <delete id="deleteUserRoleByUserId">
        delete from sys_user_role where user_id = #{userId}
    </delete>

</mapper>